@model Lcgoc.Web.Models.ModuleModel
@{
    ViewBag.Title = Model.module.moduleName;
}
@Styles.Render("~/Areas/Admin/Content/bootstrap-table/bootstrap-table.css")
<div class="panel-body" style="padding-bottom: 0px;">
    <div class="panel panel-default">
        <div class="panel-heading">查询条件</div>
        @if (Model.query != null && Model.query.Count() > 0)
        {
            <div class="panel-body">
                <form id="formSearch" class="form-horizontal">
                    <div class="form-group" style="margin-top: 15px">
                        @foreach (var item in Model.query)
                        {
                            <label class="control-label col-sm-1" for="@item.queryCode">@item.queryName</label>
                            <div class="col-sm-3">
                                <input type="text" class="form-control" id="@("txt_"+item.queryCode)">
                            </div>
                        }
                    </div>
                </form>
            </div>
        }
    </div>

    @if (Model.actions != null && Model.actions.Count() > 0)
    {
        <div id="toolbar" class="btn-group">
            @foreach (var item in Model.actions)
            {
                <button id="@item.actionCode" type="button" class="btn btn-default">
                    <span class="glyphicon @item.glyphicon" aria-hidden="true"></span>@item.actionName
                </button>
            }
        </div>
    }
    <table id="tb_departments"></table>
</div>

@foreach (var item in Model.actions)
{
    if (item.dialog)
    {
        var columns = Model.columns.Where(n => n.actionCode == item.actionCode);
        <div class="modal fade" id="@("dialog" + item.actionCode)" tabindex="-1" role="dialog" aria-labelledby="@("modalLabel" + item.actionCode)">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                        <h4 class="modal-title" id="@("modalLabel" + item.actionCode)">@item.actionName</h4>
                    </div>
                    <div class="modal-body">
                        @foreach (var iCloumn in columns)
                        {
                            <div class="form-group has-feedback">
                                <input type="text" class="form-control" id="@(item.actionCode + iCloumn.columnCode)" placeholder="@iCloumn.columnName">
                                <span class="glyphicon glyphicon-barcode form-control-feedback"></span>
                            </div>
                        }
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span>关闭</button>
                        <button type="button" id="btn_submit" class="btn btn-primary" data-dismiss="modal"><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span>@item.actionName</button>
                    </div>
                </div>
            </div>
        </div>
    }
}
@Scripts.Render("~/Areas/Admin/Content/bootstrap-table/bootstrap-table.js")
@Scripts.Render("~/Areas/Admin/Content/bootstrap-table/locale/bootstrap-table-zh-CN.js")
@Scripts.Render("~/Areas/Admin/Scripts/Module/Index.js")
<script>
    @{
        var columnStr = "[{checkbox: true},";
        foreach (var item in Model.columns)
        {
            columnStr += "{field:'"+ item.columnCode + "',title: '"+ item.columnName + "'},";
        }
        columnStr = columnStr.Substring(0, columnStr.Length - 1);
        columnStr += "]";

        var queryStr = "{pageSize: e.limit,pageIndex: e.offset,";
        foreach (var item in Model.query)
        {
            queryStr += ""+ item.queryCode + ":$('#txt_"+ item.queryCode + "').val(),";
        }
        queryStr += "}";
        queryStr = queryStr.Substring(0, queryStr.Length - 1);
      }
    //1.初始化Table
    var oTable = new TableInit("tb_departments", "@Model.module.queryApiUrl", "@Model.module.minimumCountColumns", "@Model.module.tableHeight", @Html.Raw(columnStr), function (e) {
        return {   //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
            pageSize: e.limit,   //页面大小
            pageIndex: e.offset,  //页码
            @Html.Raw(queryStr)
        };
    });

</script>
